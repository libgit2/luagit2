--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "OID".
--
module("OID")

--- Create a new OID object.
--
-- <p>Calls <a href="http://libgit2.github.io/libgit2/#HEAD/group/oid/git_oid_fromstrn">git_oid_fromstrn</a>:<p><p>If N is odd, N-1 characters will be parsed instead.
--  The remaining space in the git_oid will be set to zero.
-- @param str input hex string of at least size `length`.  Must be of type <code>string</code>.
-- @return <a href="OID.html">OID</a> or <code>nil</code> on error.
-- @return Error string.
-- @name OID.hex
function OID.hex(str)
end

--- Create a new OID object.
--
-- <p>Calls <a href="http://libgit2.github.io/libgit2/#HEAD/group/oid/git_oid_fromraw">git_oid_fromraw</a>:<p><p>
-- @param raw the raw input bytes to be copied..  Must be of type <code>string</code>.
-- @return <a href="OID.html">OID</a>.
-- @name OID.raw
function OID.raw(raw)
end

--- object method.
--
-- @return <code>string</code>.
-- @name OID:pathfmt
function OID:pathfmt()
end

--- object method.
--
-- @return <code>string</code>.
-- @name OID:fmt
function OID:fmt()
end

--- object meta method.
--
-- @return <code>string</code>.
-- @name OID_mt:__tostring
function OID_mt:__tostring()
end

--- object meta method.
--
-- <p>Calls <a href="http://libgit2.github.io/libgit2/#HEAD/group/oid/git_oid_cmp">git_oid_cmp</a>:<p><p>
-- @param id Must be of type <a href="OID.html">OID</a>.
-- @return <code>integer</code>.
-- @name OID_mt:__eq
function OID_mt:__eq(id)
end

