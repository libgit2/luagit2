--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "Index".
--
module("Index")

--- Create a new Index object.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_open">git_index_open</a>:<p><p>Since there is no ODB or working directory behind this index,
--  any Index methods which rely on these (e.g. index_add) will
--  fail with the GIT_EBAREINDEX error code.<p> If you need to access the index of an actual repository,
--  use the `git_repository_index` wrapper.<p> The index must be freed once it's no longer in use.
-- @param index_path the path to the index file in disk.  Must be of type <code>string</code>.
-- @return <a href="Index.html">Index</a> or <code>nil</code> on error.
-- @return Error string.
-- @name Index.bare
function Index.bare(index_path)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_clear">git_index_clear</a>:<p><p>
-- @name Index:clear
function Index:clear()
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_read">git_index_read</a>:<p><p>
-- @param force Must be of type <code>integer</code>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:read
function Index:read(force)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_write">git_index_write</a>:<p><p>
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:write
function Index:write()
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_find">git_index_find</a>:<p><p>
-- @param at_pos Must be of type <code>lightuserdata</code>.
-- @param path path to search.  Must be of type <code>string</code>.
-- @return <code>integer</code>.
-- @name Index:find
function Index:find(at_pos, path)
end

--- object method.
--
-- @param path Must be of type <code>string</code>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:add_bypath
function Index:add_bypath(path)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_add">git_index_add</a>:<p><p>The file `path` must be relative to the repository's
--  working folder and must be readable.<p> This method will fail in bare index instances.<p> This forces the file to be added to the index, not looking
--  at gitignore rules.  Those rules can be evaluated through
--  the git_status APIs (in status.h) before calling this.
-- @param source_entry Must be of type <a href="IndexEntry.html">IndexEntry</a>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:add
function Index:add(source_entry)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_remove">git_index_remove</a>:<p><p>
-- @param path Must be of type <code>string</code>.
-- @param stage Must be of type <code>integer</code>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:remove
function Index:remove(path, stage)
end

--- object method.
--
-- @param n Must be of type <code>integer</code>.
-- @return <a href="IndexEntry.html">IndexEntry</a>.
-- @name Index:get_byindex
function Index:get_byindex(n)
end

--- object method.
--
-- @param path Must be of type <code>string</code>.
-- @param stage Must be of type <code>integer</code>.
-- @return <a href="IndexEntry.html">IndexEntry</a>.
-- @name Index:get_bypath
function Index:get_bypath(path, stage)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_entrycount">git_index_entrycount</a>:<p><p>
-- @return <code>integer</code>.
-- @name Index:entrycount
function Index:entrycount()
end

--- object method.
--
-- @return <code>integer</code>.
-- @name Index:reuc_entrycount
function Index:reuc_entrycount()
end

--- object method.
--
-- @param path Must be of type <code>string</code>.
-- @return <a href="IndexEntryUnmerged.html">IndexEntryUnmerged</a>.
-- @name Index:reuc_get_bypath
function Index:reuc_get_bypath(path)
end

--- object method.
--
-- @param n Must be of type <code>integer</code>.
-- @return <a href="IndexEntryUnmerged.html">IndexEntryUnmerged</a>.
-- @name Index:reuc_get_byindex
function Index:reuc_get_byindex(n)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.com/libgit2/#HEAD/group/index/git_index_read_tree">git_index_read_tree</a>:<p><p>The current index contents will be replaced by the specified tree.
-- @param tree tree to read.  Must be of type <a href="Tree.html">Tree</a>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name Index:read_tree
function Index:read_tree(tree)
end

