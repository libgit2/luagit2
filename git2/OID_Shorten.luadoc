--
-- Warning: AUTOGENERATED DOCS.
--

--- Class "OID_Shorten".
--
module("OID_Shorten")

--- Create a new OID_Shorten object.
--
-- <p>Calls <a href="http://libgit2.github.io/libgit2/#HEAD/group/oid/git_oid_shorten_new">git_oid_shorten_new</a>:<p><p>The OID shortener is used to process a list of OIDs
--  in text form and return the shortest length that would
--  uniquely identify all of them.<p> E.g. look at the result of `git log --abbrev`.
-- @param min_length The minimal length for all identifiers,   which will be used even if shorter OIDs would still   be unique..  Must be of type <code>integer</code>.
-- @return <a href="OID_Shorten.html">OID_Shorten</a>.
-- @name OID_Shorten.new
function OID_Shorten.new(min_length)
end

--- object method.
--
-- <p>Calls <a href="http://libgit2.github.io/libgit2/#HEAD/group/oid/git_oid_shorten_add">git_oid_shorten_add</a>:<p><p>The OID is expected to be a 40-char hexadecimal string.
--  The OID is owned by the user and will not be modified
--  or freed.<p> For performance reasons, there is a hard-limit of how many
--  OIDs can be added to a single set (around ~22000, assuming
--  a mostly randomized distribution), which should be enough
--  for any kind of program, and keeps the algorithm fast and
--  memory-efficient.<p> Attempting to add more than those OIDs will result in a
--  GIT_ENOMEM error
-- @param text_oid an OID in text form.  Must be of type <code>string</code>.
-- @return <code>true</code> if no error.
-- @return Error string.
-- @name OID_Shorten:add
function OID_Shorten:add(text_oid)
end

